CREATE TABLE RoomTypes
(
ID INT IDENTITY(1,1) CONSTRAINT PK_RoomTypes PRIMARY KEY,
Name VARCHAR(120) NOT NULL
);

CREATE TABLE Rooms
(
ID INT IDENTITY(1,1) CONSTRAINT PK_Rooms PRIMARY KEY,
RoomType_ID INT NOT NULL CONSTRAINT FK_RoomType_Rooms REFERENCES RoomTypes(ID) ON UPDATE CASCADE ON DELETE CASCADE,
Name VARCHAR(50) NOT NULL,
Floor INT NOT NULL,
Phone VARCHAR(14),
Cost INT NOT NULL,
NumRoom INT,
NumBed INT
);

CREATE TABLE Roles
(
ID INT IDENTITY(1,1) CONSTRAINT PK_Roles PRIMARY KEY,
Name VARCHAR(60) NOT NULL
);

CREATE TABLE Users
(
ID INT IDENTITY(1,1) CONSTRAINT PK_Users PRIMARY KEY,
Role_ID INT NOT NULL CONSTRAINT FK_Roles_Users REFERENCES Roles(ID) ON UPDATE CASCADE ON DELETE CASCADE,
Login VARCHAR(40) NOT NULL CONSTRAINT UC_Login UNIQUE,
Password VARCHAR(255) NOT NULL,
DateReg DateTime NOT NULL DEFAULT GetDate(),
DateLastLogin DateTime
);

CREATE TABLE DocType
(
ID INT IDENTITY(1,1) CONSTRAINT PK_DocType PRIMARY KEY,
Name VARCHAR(120) NOT NULL
);

CREATE TABLE ClientGender
(
ID INT IDENTITY(1,1) CONSTRAINT PK_ClientGender PRIMARY KEY,
Name VARCHAR(120) NOT NULL
);

CREATE TABLE Clients
(
ID INT IDENTITY(1,1) CONSTRAINT PK_Clients PRIMARY KEY,
User_ID INT CONSTRAINT FK_Users_Clients REFERENCES Users(ID) ON UPDATE CASCADE ON DELETE SET NULL,
FirstName VARCHAR(90) NOT NULL,
LastName VARCHAR(90) NOT NULL,
Patronymic VARCHAR(90) NOT NULL,
Gender INT NOT NULL CONSTRAINT FK_Clients_ClientGender REFERENCES ClientGender(ID) ON UPDATE CASCADE,
Birthday DateTime NOT NULL,
DocType_ID INT NOT NULL CONSTRAINT FK_Clients_DocType REFERENCES DocType(ID) ON UPDATE CASCADE,
DocNumber VARCHAR(30) NOT NULL,
Adress VARCHAR(128) NOT NULL,
Phone VARCHAR(14) NOT NULL
);

CREATE TABLE RegisterCards
(
ID INT IDENTITY(1,1) CONSTRAINT PK_RegisterCards PRIMARY KEY,
Client_ID INT NOT NULL CONSTRAINT FK_Clients_RegisterCards REFERENCES Clients(ID) ON UPDATE CASCADE ON DELETE CASCADE,
Room_ID INT NOT NULL CONSTRAINT FK_Rooms_RegisterCards REFERENCES Rooms(ID)  ON UPDATE CASCADE ON DELETE CASCADE,
DateSettling DateTime NOT NULL,
DateEviction DateTime NOT NULL,
CostReservation INT NOT NULL DEFAULT '0', /* Стоимость бронирования */
NumDaysPaid INT, /* Оплачено дней */
SumPaid INT NOT NULL, /* Сколько оплачено */
FinalyCost INT NOT NULL DEFAULT '0' /* Всего должен */
);

CREATE TABLE Accounts
(
ID INT IDENTITY(1,1) CONSTRAINT PK_Accounts PRIMARY KEY,
Card_ID INT NOT NULL CONSTRAINT FK_RegisterCards_Accounts REFERENCES RegisterCards(ID) ON UPDATE CASCADE ON DELETE CASCADE,
Name VARCHAR(60) NOT NULL,
Cost INT NOT NULL,
DateSet DateTime NOT NULL DEFAULT(GetDate())
);

CREATE TABLE AccountsTemplate
(
ID INT IDENTITY(1,1) CONSTRAINT PK_AccountsTemplate PRIMARY KEY,
Name VARCHAR(255) NOT NULL,
Cost INT
);

CREATE TABLE Archives
(
ID INT IDENTITY(1,1) CONSTRAINT PK_Archives PRIMARY KEY,
Client_ID INT NOT NULL CONSTRAINT FK_Clients_Archives REFERENCES Clients(ID) ON UPDATE CASCADE ON DELETE CASCADE,
Room_ID INT NOT NULL CONSTRAINT FK_Rooms_Archives REFERENCES Rooms(ID) ON UPDATE CASCADE ON DELETE CASCADE,
DateSettling DateTime NOT NULL,
DateEviction DateTime NOT NULL,
FinalyCost INT NOT NULL
);

CREATE TABLE Reservations
(
ID INT IDENTITY(1,1) CONSTRAINT PK_Reservations PRIMARY KEY,
Client_ID INT NOT NULL CONSTRAINT FK_Clients_Reservations REFERENCES Clients(ID) ON UPDATE CASCADE ON DELETE CASCADE,
RoomType_ID INT NOT NULL CONSTRAINT FK_RoomTypes_Reservations REFERENCES RoomTypes(ID)  ON UPDATE CASCADE ON DELETE CASCADE,
DateSettling DateTime NOT NULL,
DateEviction DateTime NOT NULL,
DateReservation DateTime NOT NULL DEFAULT(GetDate())
);

